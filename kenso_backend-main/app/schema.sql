DROP DATABASE IF EXISTS kenso;

CREATE DATABASE kenso;

USE kenso;

CREATE TABLE `client`(
	client_id BINARY(16) NOT NULL UNIQUE,
	full_name VARCHAR(50) NOT NULL,
	email VARCHAR(36) NOT NULL UNIQUE,
	phone_number INT(20) NOT NULL UNIQUE,
	`address` VARCHAR(100),
	pwd VARCHAR(100) NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY(client_id)
);

CREATE TABLE `admin`(
	admin_id BINARY(16) NOT NULL UNIQUE,
	full_name VARCHAR(50) NOT NULL,
	`role` VARCHAR(36) NOT NULL,
	email VARCHAR(36) NOT NULL UNIQUE,
	phone_number INT(20) NOT NULL UNIQUE,
	pwd VARCHAR(100) NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY(admin_id)
);

CREATE TABLE `product`(
	product_id BINARY(16) NOT NULL UNIQUE,
	serial_number VARCHAR(50) NOT NULL UNIQUE,
	product_name VARCHAR(36) NOT NULL,
	product_type VARCHAR(36) NOT NULL,
	product_description VARCHAR(100) NOT NULL,
	uploaded_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY(product_id)
);

CREATE TABLE `order`(
	order_id BINARY(16) NOT NULL UNIQUE,
	client_id BINARY(16) NOT NULL,
	payment_method VARCHAR(36) NOT NULL DEFAULT 'mpesa', 
	order_location VARCHAR(36) NOT NULL,
	ordered_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY(order_id),
	FOREIGN KEY(client_id) REFERENCES client(client_id) 
	ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE `order_item`(
	order_item_id BINARY(16) NOT NULL UNIQUE,
	order_id BINARY(16) NOT NULL,
	product_id BINARY(16) NOT NULL,
	item_quantity INT(10) NOT NULL,
	ordered_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY(order_item_id),
	FOREIGN KEY(order_id) REFERENCES kenso.order(order_id) 
	ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY(product_id) REFERENCES product(product_id) 
	ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE `feedback`(
	message_id BINARY(16) NOT NULL UNIQUE,
	client_id BINARY(16) NOT NULL,
	`subject` VARCHAR(36) NOT NULL,
	`message` VARCHAR(1000) NOT NULL,
	response VARCHAR(36),
	sent_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

	PRIMARY KEY(message_id),
	FOREIGN KEY(client_id) REFERENCES client(client_id) 
	ON UPDATE CASCADE ON DELETE CASCADE
);
